{"version":3,"sources":["../src/ts/is.ts","../src/ts/constant.ts","../src/ts/dom.ts","../src/ts/data.ts","../src/peek.ts"],"names":["Is","Constant","DomElement","Data"],"mappings":"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","sourcesContent":["/**\n * Peek.js\n * \n * A lightweight JavaScript library that attaches a viewer to a specific node type, allowing you to view the CSS properties, attributes, and size/position.\n * \n * @file        is.ts\n * @version     v1.2.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Char } from \"./enum\";\n\n\nexport namespace Is {\n    export function defined( value: any ) : boolean {\n        return value !== null && value !== undefined && value.toString() !== Char.empty;\n    }\n\n    export function definedObject( object: any ) : boolean {\n        return defined( object ) && typeof object === \"object\";\n    }\n\n    export function definedBoolean( object: any ) : boolean {\n        return defined( object ) && typeof object === \"boolean\";\n    }\n\n    export function definedString( object: any ) : boolean {\n        return defined( object ) && typeof object === \"string\";\n    }\n\n    export function definedFunction( object: any ) : boolean {\n        return defined( object ) && typeof object === \"function\";\n    }\n\n    export function definedNumber( object: any ) : boolean {\n        return defined( object ) && typeof object === \"number\";\n    }\n\n    export function definedArray( object: any ) : boolean {\n        return definedObject( object ) && object instanceof Array;\n    }\n\n    export function definedDate( object: any ) : boolean {\n        return definedObject( object ) && object instanceof Date;\n    }\n\n    export function invalidOptionArray( array: any, minimumLength: number = 1 ) : boolean {\n        return !definedArray( array ) || array.length < minimumLength;\n    }\n}","/**\n * Peek.js\n * \n * A lightweight JavaScript library that attaches a viewer to a specific node type, allowing you to view the CSS properties, attributes, and size/position.\n * \n * @file        constant.ts\n * @version     v1.2.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nexport namespace Constant {\n    export const PEEK_JS_IGNORE_STATE_ATTRIBUTE = \"data-peek-js-ignore-state\";\n}","/**\n * Peek.js\n * \n * A lightweight JavaScript library that attaches a viewer to a specific node type, allowing you to view the CSS properties, attributes, and size/position.\n * \n * @file        dom.ts\n * @version     v1.2.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Constant } from \"./constant\";\nimport { Char, IgnoreState } from \"./enum\";\nimport { Is } from \"./is\";\nimport { type Position } from \"./type\";\n\n\nexport namespace DomElement {\n    export function create( container: HTMLElement, type: string, className: string = Char.empty ) : HTMLElement {\n        const nodeType: string = type.toLowerCase();\n        const isText: boolean = nodeType === \"text\";\n\n        let result: any = isText ? document.createTextNode( Char.empty ) : document.createElement( nodeType );\n\n        result.setAttribute( Constant.PEEK_JS_IGNORE_STATE_ATTRIBUTE, IgnoreState.ignore );\n\n        if ( Is.defined( className ) ) {\n            result.className = className;\n        }\n\n        container.appendChild( result );\n\n        return result;\n    }\n\n    export function createWithHTML( container: HTMLElement, type: string, className: string, html: string ) : HTMLElement {\n        const element: HTMLElement = create( container, type, className );\n        element.innerHTML = html;\n        element.setAttribute( Constant.PEEK_JS_IGNORE_STATE_ATTRIBUTE, IgnoreState.ignore );\n\n        return element;\n    }\n\n    export function cancelBubble( e: Event ) {\n        e.preventDefault();\n        e.cancelBubble = true;\n    }\n\n    export function getScrollPosition() : Position {\n        const documentElement: HTMLElement = document.documentElement;\n\n        const result: Position = {\n            left: documentElement.scrollLeft  - ( documentElement.clientLeft || 0 ),\n            top: documentElement.scrollTop - ( documentElement.clientTop || 0 )\n        } as Position;\n\n        return result;\n    }\n\n    export function showElementAtMousePosition( e: any, element: HTMLElement ) {\n        if ( element.style.display !== \"block\" ) {\n            let left: number = e.pageX;\n            let top: number = e.pageY;\n            const scrollPosition: Position = getScrollPosition();\n    \n            element.style.display = \"block\";\n    \n            if ( left + element.offsetWidth > window.innerWidth ) {\n                left -= element.offsetWidth;\n            } else {\n                left++;\n            }\n    \n            if ( top + element.offsetHeight > window.innerHeight ) {\n                top -= element.offsetHeight;\n            } else {\n                top++;\n            }\n    \n            if ( left < scrollPosition.left ) {\n                left = e.pageX + 1;\n            }\n    \n            if ( top < scrollPosition.top ) {\n                top = e.pageY + 1;\n            }\n            \n            element.style.left = left + \"px\";\n            element.style.top = top + \"px\";\n        }\n    }\n\n    export function getOffset( element: HTMLElement ) : Position {\n        const result: Position = {\n            left: 0,\n            top: 0\n        } as Position;\n\n        while ( element && !isNaN( element.offsetLeft ) && !isNaN( element.offsetTop ) ) {\n            result.left += element.offsetLeft - element.scrollLeft;\n            result.top += element.offsetTop - element.scrollTop;\n\n            element = element.offsetParent as HTMLElement;\n        }\n\n        return result;\n    }\n}","/**\n * Peek.js\n * \n * A lightweight JavaScript library that attaches a viewer to a specific node type, allowing you to view the CSS properties, attributes, and size/position.\n * \n * @file        data.ts\n * @version     v1.2.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Char } from \"./enum\";\nimport { Is } from \"./is\";\n\n\nexport namespace Data {\n    export function getDefaultAnyString( value: any, defaultValue: string ) : string {\n        return typeof value === \"string\" ? value : defaultValue;\n    }\n\n    export function getDefaultString( value: any, defaultValue: string ) : string {\n        return Is.definedString( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultBoolean( value: any, defaultValue: boolean ) : boolean {\n        return Is.definedBoolean( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultNumber( value: any, defaultValue: number ) : number {\n        return Is.definedNumber( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultArray( value: any, defaultValue: any[] ) : any[] {\n        return Is.definedArray( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultObject( value: any, defaultValue: object ) : any {\n        return Is.definedObject( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultStringOrArray( value: any, defaultValue: any[] ) : any[] {\n        let result: any[] = defaultValue;\n\n        if ( Is.definedString( value ) ) {\n            const values: string[] = value.toString().split( Char.space );\n\n            if ( values.length === 0 ) {\n                value = defaultValue;\n            } else {\n                result = values;\n            }\n\n        } else {\n            result = getDefaultArray( value, defaultValue );\n        }\n\n        return result;\n    }\n}","/**\n * Peek.js\n * \n * A lightweight JavaScript library that attaches a viewer to a specific node type, allowing you to view the CSS properties, attributes, and size/position.\n * \n * @file        peek.ts\n * @version     v1.2.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Position, type Configuration, type Options } from \"./ts/type\";\nimport { PublicApi } from \"./ts/api\";\nimport { Is } from \"./ts/is\";\nimport { DomElement } from \"./ts/dom\";\nimport { Data } from \"./ts/data\";\nimport { Char, IgnoreState, KeyCode, Mode, Value } from \"./ts/enum\";\nimport { Constant } from \"./ts/constant\";\n\n\n( () => {\n    // Variables: Configuration\n    let _configuration: Configuration = {} as Configuration;\n\n    // Variables: Dialog\n    let _dialog: HTMLElement = null!;\n    let _dialog_Title: HTMLElement = null!;\n    let _dialog_Contents: HTMLElement = null!;\n    let _dialog_Buttons: HTMLElement = null!;\n    let _dialog_Timer: number = 0;\n\n    // Variables: Current Process:\n    let _current_Process_Options: Options = null!;\n    let _current_Process_Elements: HTMLElement[] = [];\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  Build Dialog\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function buildDialog() : void {\n        if ( Is.definedObject( _dialog ) ) {\n            closeDialog();\n\n            document.body.removeChild( _dialog );\n            _dialog = null!;\n        }\n\n        _dialog = DomElement.create( document.body, \"div\", \"peek-js\" );\n        _dialog.onmousemove = DomElement.cancelBubble;\n\n        _dialog_Title = DomElement.create( _dialog, \"div\", \"dialog-title-bar\" );\n        _dialog_Contents = DomElement.create( _dialog, \"div\", \"dialog-contents\" );\n        _dialog_Buttons = DomElement.create( _dialog, \"div\", \"dialog-buttons\" );\n\n        const closeButton: HTMLElement = DomElement.createWithHTML( _dialog_Buttons, \"button\", \"close\", _configuration.closeText! );\n\n        closeButton.onclick = () => {\n            closeDialog();\n        };\n    }\n\n    function setDialogText() : void {\n        let title: string = _current_Process_Options.titleText!;\n\n        if ( !Is.definedString( title ) ) {\n            if ( _current_Process_Options.mode === Mode.css ) {\n                title = _configuration.cssPropertiesText!;\n            } else if ( _current_Process_Options.mode === Mode.attributes ) {\n                title = _configuration.attributesText!;\n            } else if ( _current_Process_Options.mode === Mode.size ) {\n                title = _configuration.sizeText!;\n            }\n        }\n\n        _dialog_Title.innerHTML = title;\n    }\n\n    function closeDialog() {\n        _dialog.style.display = \"none\";\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  Build Dialog Content\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function buildDialogContent( element: HTMLElement ) : void {\n        _dialog_Contents.innerHTML = Char.empty;\n        _dialog_Contents.scrollTop = 0;\n\n        if ( _current_Process_Options.mode === Mode.css ) {\n            buildCssProperties( element );\n        } else if ( _current_Process_Options.mode === Mode.attributes ) {\n            buildAttributeProperties( element );\n        } else if ( _current_Process_Options.mode === Mode.size ) {\n            buildSizeProperties( element );\n        }\n    }\n\n    function buildCssProperties( element: HTMLElement ) : void {\n        const computedStyles: CSSStyleDeclaration = getComputedStyle( element );\n        const computedStylesLength: number = computedStyles.length;\n\n        for( let styleIndex: number = 0; styleIndex < computedStylesLength; styleIndex++ ) {\n            buildPropertyRow( element, computedStyles[ styleIndex ], computedStyles.getPropertyValue( computedStyles[ styleIndex ] ) );\n        }\n    }\n\n    function buildAttributeProperties( element: HTMLElement ) : void {\n        if ( element.hasAttributes() ) {\n            for ( let attribute of element.attributes ) {\n                buildPropertyRow( element, attribute.name, attribute.value );\n            }\n\n        } else {\n            _dialog_Contents.innerHTML = _configuration.noAttributesAvailableText!;\n        }\n    }\n\n    function buildSizeProperties( element: HTMLElement ) : void {\n        const offset: Position = DomElement.getOffset( element );\n\n        buildPropertyRow( element, \"left\", offset.left.toString() + \"px\", false );\n        buildPropertyRow( element, \"top\", offset.top.toString() + \"px\", false );\n        buildPropertyRow( element, \"width\", element.offsetWidth.toString() + \"px\", false );\n        buildPropertyRow( element, \"height\", element.offsetHeight.toString() + \"px\", false );\n    }\n\n    function buildPropertyRow( element: HTMLElement, propertyNameText: string, propertyValueText: string, allowEditing: boolean = true ) : void {\n        if ( _current_Process_Options.showOnly!.length === 0 || _current_Process_Options.showOnly!.indexOf( propertyNameText ) > Value.notFound ) {\n            const property: HTMLElement = DomElement.create( _dialog_Contents, \"div\", \"property-row\" );\n\n            DomElement.createWithHTML( property, \"div\", \"property-name\", propertyNameText );\n            \n            const propertyValue: HTMLElement = DomElement.create( property, \"div\", \"property-value\" );\n            const propertyValueInput: HTMLInputElement = DomElement.create( propertyValue, \"input\" ) as HTMLInputElement;\n    \n            propertyValueInput.type = \"text\";\n            propertyValueInput.value = propertyValueText;\n\n            if ( !_current_Process_Options.allowEditing || !allowEditing ) {\n                propertyValueInput.readOnly = true;\n            } else {\n                propertyValueInput.onkeyup = ( e: KeyboardEvent ) => {\n                    onPropertyValueKeyUp( e, propertyNameText, propertyValueInput, element );\n                }\n            }\n        }\n    }\n\n    function onPropertyValueKeyUp( e: KeyboardEvent, propertyName: string, input: HTMLInputElement, element: HTMLElement ) {\n        if ( e.code === KeyCode.enter ) {\n            if ( _current_Process_Options.mode === Mode.css ) {\n                element.style.setProperty( propertyName, input.value );\n            } else if ( _current_Process_Options.mode === Mode.attributes ) {\n                element.setAttribute( propertyName, input.value );\n            }\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  Node Events\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function buildNodeEvents() : void {\n        const tagTypes: string[] = _current_Process_Options.nodeType as string[];\n        const tagTypesLength: number = tagTypes.length;\n\n        for ( let tagTypeIndex: number = 0; tagTypeIndex < tagTypesLength; tagTypeIndex++ ) {\n            const domElements: HTMLCollectionOf<Element> = document.getElementsByTagName( tagTypes[ tagTypeIndex ] );\n            const elements: HTMLElement[] = [].slice.call( domElements );\n            const elementsLength: number = elements.length;\n\n            for ( let elementIndex: number = 0; elementIndex < elementsLength; elementIndex++ ) {\n                buildNodeEvent( elements[ elementIndex ] );\n            }\n        }\n\n        window.addEventListener( \"mousemove\", closeDialog );\n    }\n\n    function buildNodeEvent( element: HTMLElement ) : void {\n        const attributeValue: string = element.getAttribute( Constant.PEEK_JS_IGNORE_STATE_ATTRIBUTE )!;\n\n        if ( !Is.definedString( attributeValue ) ?? attributeValue !== IgnoreState.ignore ) {\n            element.addEventListener( \"mousemove\", ( e ) => {\n                onNodeMouseOver( e, element );\n            } );\n    \n            _current_Process_Elements.push( element );\n        }\n    }\n\n    function removeNodeEvents() : void {\n        const currentProcessElementsLength: number = _current_Process_Elements.length;\n\n        for ( let elementIndex: number = 0; elementIndex < currentProcessElementsLength; elementIndex++ ) {\n            var element: HTMLElement = _current_Process_Elements[ elementIndex ];\n\n            element.removeEventListener( \"mousemove\", ( e ) => {\n                onNodeMouseOver( e, element );\n            } );\n        }\n\n        _current_Process_Elements = [] as HTMLElement[];\n\n        window.removeEventListener( \"mousemove\", closeDialog );\n\n        closeDialog();\n    }\n\n    function onNodeMouseOver( e: MouseEvent, element: HTMLElement ) {\n        DomElement.cancelBubble( e );\n        \n        if ( _dialog_Timer !== 0 ) {\n            clearTimeout( _dialog_Timer );\n            _dialog_Timer = 0;\n        }\n\n        _dialog_Timer = setTimeout( () => {\n            buildDialogContent( element );\n\n            DomElement.showElementAtMousePosition( e, _dialog );\n        }, _configuration.dialogDisplayDelay );\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Options\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function buildOptions( newOptions: any ) : Options {\n        let options: Options = Data.getDefaultObject( newOptions, {} as Options );\n        options.nodeType = Data.getDefaultStringOrArray( options.nodeType, [] );\n        options.mode = Data.getDefaultNumber( options.mode, Mode.css );\n        options.titleText = Data.getDefaultString( options.titleText, Char.empty );\n        options.showOnly = Data.getDefaultStringOrArray( options.showOnly, [] );\n        options.allowEditing = Data.getDefaultBoolean( options.allowEditing, false );\n\n        return options;\n    }\n\n\n\t/*\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t * Public API Functions:  Helpers:  Configuration\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t */\n\n    function buildDefaultConfiguration( newConfiguration: Configuration = null! ) : void {\n        _configuration = Data.getDefaultObject( newConfiguration, {} as Configuration );\n        _configuration.dialogDisplayDelay = Data.getDefaultNumber( _configuration.dialogDisplayDelay, 1000 );\n\n        buildDefaultStringConfiguration();\n    }\n\n    function buildDefaultStringConfiguration() : void {\n        _configuration.cssPropertiesText = Data.getDefaultAnyString( _configuration.cssPropertiesText, \"CSS Properties\" );\n        _configuration.attributesText = Data.getDefaultAnyString( _configuration.attributesText, \"Attributes\" );\n        _configuration.sizeText = Data.getDefaultAnyString( _configuration.sizeText, \"Size\" );\n        _configuration.noAttributesAvailableText = Data.getDefaultAnyString( _configuration.noAttributesAvailableText, \"No attributes are available.\" );\n        _configuration.closeText = Data.getDefaultAnyString( _configuration.closeText, \"Close\" );\n    }\n\n\n\t/*\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t * Public API Functions:\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t */\n\n    const _public: PublicApi = {\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public API Functions:  Running\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        start: function ( options: Options ): PublicApi {\n            if ( !Is.definedObject( _current_Process_Options ) ) {\n                _current_Process_Options = buildOptions( options );\n\n                setDialogText();\n                buildNodeEvents();\n            }\n\n            return _public;\n        },\n\n        stop: function (): PublicApi {\n            if ( Is.definedObject( _current_Process_Options ) ) {\n                _current_Process_Options = null!;\n\n                removeNodeEvents();\n            }\n\n            return _public;\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public API Functions:  Configuration\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        setConfiguration: function ( newConfiguration: any ): PublicApi {\n            if ( Is.definedObject( newConfiguration ) ) {\n                let configurationHasChanged: boolean = false;\n                const newInternalConfiguration: any = _configuration;\n            \n                for ( let propertyName in newConfiguration ) {\n                    if ( newConfiguration.hasOwnProperty( propertyName ) && _configuration.hasOwnProperty( propertyName ) && newInternalConfiguration[ propertyName ] !== newConfiguration[ propertyName ] ) {\n                        newInternalConfiguration[ propertyName ] = newConfiguration[ propertyName ];\n                        configurationHasChanged = true;\n                    }\n                }\n        \n                if ( configurationHasChanged ) {\n                    buildDefaultConfiguration( newInternalConfiguration );\n                    buildDialog();\n\n                    if ( Is.definedObject( _current_Process_Options ) ) {\n                        setDialogText();\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public API Functions:  Additional Data\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        getVersion: function (): string {\n            return \"1.2.0\";\n        }\n    };\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Initialize Heat.js\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    ( () => {\n        buildDefaultConfiguration();\n\n        document.addEventListener( \"DOMContentLoaded\", () => {\n            buildDialog();\n        } );\n\n        if ( !Is.defined( window.$peek ) ) {\n            window.$peek = _public;\n        }\n    } )();\n} )();"]}